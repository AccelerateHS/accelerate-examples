language: haskell
env:
  global:
    - HAPPY=1.19.5
    - ALEX=3.1.4

    - SHA_ACCELERATE=11bde8004579b047c5dee97efec61fd05d0b79a1
    - URL_ACCELERATE=https://github.com/AccelerateHS/accelerate.git

    - SHA_ACCELERATE_IO=2d135c67e5da4a6789c98569cb9685e545471ba0
    - URL_ACCELERATE_IO=https://github.com/AccelerateHS/accelerate-io.git

    - SHA_ACCELERATE_FFT=3eb505777d2e358cd6bdee0e7d8553d7f8afec41
    - URL_ACCELERATE_FFT=https://github.com/AccelerateHS/accelerate-fft.git

    - SHA_ACCELERATE_CUDA=0de7835efbaee27eca556c0211afaea71b8e9931
    - URL_ACCELERATE_CUDA=https://github.com/AccelerateHS/accelerate-cuda.git

    - SHA_GLOSS_ACCELERATE=b57bd2d6fac30e198e9acea9336de6466d02bb4f
    - URL_GLOSS_ACCELERATE=https://github.com/tmcdonell/gloss-accelerate.git

    - SHA_GLOSS_RASTER_ACCELERATE=e594b80800e4c8bfab5d1f955fa1bdbd13fc2152
    - URL_GLOSS_RASTER_ACCELERATE=https://github.com/tmcdonell/gloss-raster-accelerate.git

  matrix:
    - GHC=7.8.4
    - GHC=7.8.4 CUDA=6.5-14
    - GHC=7.8.4 CUDA=7.0-28
    - GHC=7.10.1 CABAL=1.22
      # GHC-7.10 is too slow and uses too much memory for a complete build
      # within the 50 minute time limit.
      # - GHC=7.10.1 CABAL=1.22 CUDA=6.5-14
      # - GHC=7.10.1 CABAL=1.22 CUDA=7.0-28
    - GHC=head CABAL=head CUDA=7.0-28

matrix:
    allow_failures:
        - env: GHC=head CABAL=head CUDA=7.0-28

before_install:
    # Fetch accelerate dependencies
    - echo "Checking out dependencies"
    - travis_retry git clone -b release/0.15 ${URL_ACCELERATE} deps/accelerate
    - pushd deps/accelerate
    - git reset --hard ${SHA_ACCELERATE}
    - popd

    - travis_retry git clone -b release/0.15 ${URL_ACCELERATE_IO} deps/accelerate-io
    - pushd deps/accelerate-io
    - git reset --hard ${SHA_ACCELERATE_IO}
    - popd

    - travis_retry git clone -b release/0.15 ${URL_ACCELERATE_FFT} deps/accelerate-fft
    - pushd deps/accelerate-fft
    - git reset --hard ${SHA_ACCELERATE_FFT}
    - popd

    - travis_retry git clone -b release/0.19 ${URL_GLOSS_ACCELERATE} deps/gloss-accelerate
    - pushd deps/gloss-accelerate
    - git reset --hard ${SHA_GLOSS_ACCELERATE}
    - popd

    - travis_retry git clone -b release/0.19 ${URL_GLOSS_RASTER_ACCELERATE} deps/gloss-raster-accelerate
    - pushd deps/gloss-raster-accelerate
    - git reset --hard ${SHA_GLOSS_RASTER_ACCELERATE}
    - popd

    - |
        if [ ${CUDA} ]; then
            travis_retry git clone -b release/0.15 ${URL_ACCELERATE_CUDA} deps/accelerate-cuda
            pushd deps/accelerate-cuda
            git reset --hard ${SHA_ACCELERATE_CUDA}
            popd
        fi

    # If travis doesn't have the version of GHC that we want, get it from hvr's PPA
    - echo "Setting up GHC"
    - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
    - travis_retry sudo apt-get update -qq
    - travis_retry sudo apt-get autoremove
    - travis_retry sudo apt-get install -y c2hs
    - travis_retry sudo apt-get install happy-${HAPPY} alex-${ALEX}
    - export PATH=/opt/alex/${ALEX}/bin:/opt/happy/${HAPPY}/bin:${PATH}
    - export PATH=/usr/local/ghc/${GHC}/bin:${PATH}
    - |
        if [ $(ghc --numeric-version) != ${GHC} ]; then
            travis_retry sudo apt-get install -y ghc-${GHC}
            export PATH=/opt/ghc/${GHC}/bin:${PATH}
        fi
    - |
        if [ ${CABAL} ]; then
            travis_retry sudo apt-get install -y cabal-install-${CABAL}
            export PATH=/opt/cabal/${CABAL}/bin:${PATH}
        fi

    # Maybe install the CUDA library
    - |
        if [ ${CUDA} ]; then
            echo "Installing CUDA library"
            travis_retry wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1204/x86_64/cuda-repo-ubuntu1204_${CUDA}_amd64.deb
            travis_retry sudo dpkg -i cuda-repo-ubuntu1204_${CUDA}_amd64.deb
            travis_retry sudo apt-get update -qq
            export CUDA_APT=${CUDA%-*}
            export CUDA_APT=${CUDA_APT/./-}
            travis_retry sudo apt-get install -y cuda-drivers cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT} cuda-cufft-dev-${CUDA_APT}
            travis_retry sudo apt-get clean
            export CUDA_HOME=/usr/local/cuda-${CUDA%%-*}
            export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
            export PATH=${CUDA_HOME}/bin:${PATH}
        else
            export MODE=-f-cuda
        fi

install:
    - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
    - cabal --version
    - llc --version; true
    - opt --version; true
    - cabal install --only-dependencies --enable-tests ${MODE} . deps/*
    - cabal install ${MODE} deps/*

script:
    # Check the build
    - cabal configure -v2 -flib-Werror ${MODE}
    - cabal build
    - cabal haddock
#    - cabal test --show-details=always

    # Check the source distribution can be generated, built, and installed
    - cabal sdist
    - |
        export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}')
        cd dist
        if [ -f "$SRC_TGZ" ]; then
            travis_wait cabal install --force-reinstalls ${MODE} ${SRC_TGZ} || exit 1
        else
            echo "'$SRC_TGZ': not found"
            exit 1
        fi

after_failure:
    - dmesg
    - ls -R /usr/local/cuda*

